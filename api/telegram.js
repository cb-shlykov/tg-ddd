const fetch = require('node-fetch');

module.exports = async (req, res) => {
  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }
  
  if (req.method === 'POST') {
    console.log('üì® Telegram webhook received');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
      if (!req.body) {
        console.log('‚ùå No request body');
        return res.status(200).json({ok: true});
      }
      
      console.log('‚úÖ Update received:', JSON.stringify(req.body, null, 2));
      
      const scriptUrl = 'https://script.google.com/macros/s/AKfycbxBxDDBml54Pn8Ti7d8MKkl7UNIvraqVC_Ds5yid_vtuGEd5HykorL5-VE8T9WM1z6G/exec';
      
      // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤ Apps Script —Å —Ç–∞–π–º–∞—É—Ç–æ–º
      console.log('üîÑ Forwarding to Apps Script...');
      const controller = new AbortController();
      const timeoutId = setTimeout(() => controller.abort(), 10000);
      
      const response = await fetch(scriptUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(req.body),
        signal: controller.signal
      });
      
      clearTimeout(timeoutId);
      
      const result = await response.text();
      console.log('‚úÖ Apps Script response:', response.status, result);
      
      // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö Telegram
      res.status(200).json({ok: true});
      
    } catch (error) {
      console.error('‚ùå Error:', error.name, error.message);
      
      // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 200 –¥–ª—è Telegram
      res.status(200).json({ok: true, note: 'forwarding failed but ack sent'});
    }
  } else {
    res.status(200).json({
      status: 'Telegram webhook endpoint',
      usage: 'Send POST requests here',
      test: 'Webhook is ready'
    });
  }
};
