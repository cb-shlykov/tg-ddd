const fetch = require('node-fetch');

module.exports = async (req, res) => {
  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
  
  if (req.method === 'OPTIONS') {
    return res.status(200).end();
  }
  
  if (req.method === 'POST') {
    console.log('üì® Received Telegram update');
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞
      const body = req.body;
      console.log('Request body:', JSON.stringify(body, null, 2));
      
      const scriptUrl = 'https://script.google.com/macros/s/AKfycbxBxDDBml54Pn8Ti7d8MKkl7UNIvraqVC_Ds5yid_vtuGEd5HykorL5-VE8T9WM1z6G/exec';
      
      console.log('üîÑ Forwarding to Apps Script...');
      const response = await fetch(scriptUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(body),
        timeout: 30000
      });
      
      const result = await response.text();
      console.log('‚úÖ Apps Script response status:', response.status);
      console.log('‚úÖ Apps Script response:', result);
      
      // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö Telegram
      res.status(200).json({ok: true});
      
    } catch (error) {
      console.error('‚ùå Error forwarding to Apps Script:', error);
      // –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 200 Telegram, –∏–Ω–∞—á–µ –æ–Ω –æ—Ç–∫–ª—é—á–∏—Ç –≤–µ–±—Ö—É–∫
      res.status(200).json({ok: true, error: error.message});
    }
  } else {
    res.status(200).json({status: 'Ready for Telegram webhook'});
  }
};
