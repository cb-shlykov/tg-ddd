// api/bot.js
import { Telegraf } from "telegraf";

/* --------------------------------------------------------------
   –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ‚Äì —É–∂–µ –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã.
   -------------------------------------------------------------- */
const BOT_TOKEN = "7964054515:AAHIU9aDGoFQkfDaplTkbVQ9_JlilcrBzYM";
const ADMIN_ID  = 111603368;               // telegram‚Äëuser_id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

if (!BOT_TOKEN) {
  throw new Error("BOT_TOKEN is missing!");
}

/* --------------------------------------------------------------
   –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
   -------------------------------------------------------------- */
const bot = new Telegraf(BOT_TOKEN);

/* --------------------------------------------------------------
   –î–∞–Ω–Ω—ã–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (schedule) –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ—ã (dayInfo)
   -------------------------------------------------------------- */
const schedule = [
  {
    time: "08:00-08:40",
    Monday:    "–†–∞–∑–≥–æ–≤–æ—Ä—ã –æ –≤–∞–∂–Ω–æ–º",
    Tuesday:   "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
    Wednesday: "–§–∏–∑-—Ä–∞",
    Thursday:  "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
    Friday:    "–û–∫—Ä—É–∂. –º–∏—Ä",
    Saturday:  "–û–∫—Ä—É–∂. –º–∏—Ä"
  },
  {
    time: "08:50-09:30",
    Monday:    "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
    Tuesday:   "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
    Wednesday: "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
    Thursday:  "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    Friday:    "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    Saturday:  "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"
  },
  {
    time: "09:45-10:25",
    Monday:    "–ú—É–∑—ã–∫–∞",
    Tuesday:   "–†–∏—Ç–º–∏–∫–∞",
    Wednesday: "–û–∫—Ä—É–∂. –º–∏—Ä",
    Thursday:  "–†–∏—Ç–º–∏–∫–∞",
    Friday:    "–§–∏–∑-—Ä–∞",
    Saturday:  "–§–∏–∑-—Ä–∞"
  },
  {
    time: "10:45-11:25",
    Monday:    "–†–∏—Ç–º–∏–∫–∞",
    Tuesday:   "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
    Wednesday: "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
    Thursday:  "–¢—Ä—É–¥",
    Friday:    null,
    Saturday:  null
  },
  {
    time: "11:45-12:25",
    Monday:    "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫",
    Tuesday:   null,
    Wednesday: null,
    Thursday:  null,
    Friday:    null,
    Saturday:  null
  }
];

const dayInfo = [
  { day: "–ü–Ω", endOfLessons: "11:40", pickup: "–ë–∞–±—É—à–∫–∞", karate: false },
  { day: "–í—Ç", endOfLessons: "11:40", pickup: "–ë–∞–±—É—à–∫–∞", karate: "16:30" },
  { day: "–°—Ä", endOfLessons: "11:40", pickup: "–ü—Ä–æ–¥–ª–µ–Ω–∫–∞", karate: false },
  { day: "–ß—Ç", endOfLessons: "11:40", pickup: "–ë–∞–±—É—à–∫–∞", karate: "16:30" },
  { day: "–ü—Ç", endOfLessons: "11:40", pickup: "–ü—Ä–æ–¥–ª–µ–Ω–∫–∞", karate: false }
];

/* --------------------------------------------------------------
   –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏
   -------------------------------------------------------------- */
const EN_RU_DAYS = {
  Monday:    "–ü–Ω",
  Tuesday:   "–í—Ç",
  Wednesday: "–°—Ä",
  Thursday:  "–ß—Ç",
  Friday:    "–ü—Ç",
  Saturday:  "–°–±"
};

const RU_EN_DAYS = {
  –ü–Ω: "Monday",
  –í—Ç: "Tuesday",
  –°—Ä: "Wednesday",
  –ß—Ç: "Thursday",
  –ü—Ç: "Friday",
  –°–±: "Saturday"
};

// –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –≤—Å–µ—Ö, –∫—Ç–æ –∫–æ–≥–¥–∞‚Äë–ª–∏–±–æ –ø–∏—Å–∞–ª –±–æ—Ç—É (–¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏)
let knownUsers = new Set();

/* --------------------------------------------------------------
   –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
   -------------------------------------------------------------- */
function formatDaySchedule(ruDay) {
  const enDay = RU_EN_DAYS[ruDay];
  if (!enDay) return `‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –¥–µ–Ω—å ¬´${ruDay}¬ª.`;

  const rows = schedule
    .filter((r) => r[enDay])                // –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏
    .map((r) => `${r.time} ‚Äî ${r[enDay]}`);

  return rows.length
    ? `üìÖ *${ruDay}*:\n` + rows.join("\n")
    : `üìÖ *${ruDay}* ‚Äî –∑–∞–Ω—è—Ç–∏–π –Ω–µ—Ç.`;
}

function formatWeekSchedule() {
  const days = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç"];
  return days.map(formatDaySchedule).join("\n\n");
}

/* --------------------------------------------------------------
   –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–±–∏—Ä–∞–Ω–∏–∏/–∫–∞—Ä–∞—Ç–µ
   -------------------------------------------------------------- */
function formatPickupInfo(ruDay) {
  const info = dayInfo.find((i) => i.day === ruDay);
  if (!info) return `‚ùì –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–Ω—è ${ruDay}.`;

  const karate = info.karate === false ? "‚ùå –Ω–µ—Ç" : `üïí ${info.karate}`;
  return (
    `üìå *${ruDay}*:\n` +
    `‚è∞ –ö–æ–Ω–µ—Ü —É—Ä–æ–∫–æ–≤: ${info.endOfLessons}\n` +
    `üë§ –ö—Ç–æ –∑–∞–±–µ—Ä—ë—Ç: ${info.pickup}\n` +
    `ü•ã –ö–∞—Ä–∞—Ç–µ: ${karate}`
  );
}

/* --------------------------------------------------------------
   –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
   -------------------------------------------------------------- */
bot.start((ctx) => {
  knownUsers.add(ctx.from.id);
  ctx.reply(
    `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!\n` +
    `–Ø ‚Äî –±–æ—Ç‚Äë–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —à–∫–æ–ª—ã.\n\n` +
    `üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n` +
    `/schedule ‚Äî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—Å—é –Ω–µ–¥–µ–ª—é\n` +
    `/schedule <–¥–µ–Ω—å> ‚Äî —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å (–ü–Ω‚Äë–ü—Ç)\n` +
    `/pickup ‚Äî –∫—Ç–æ –∏ –∫–æ–≥–¥–∞ –∑–∞–±–∏—Ä–∞–µ—Ç —Ä–µ–±—ë–Ω–∫–∞ + –∫–∞—Ä–∞—Ç–µ\n` +
    `/pickup <–¥–µ–Ω—å> ‚Äî —Ç–∞ –∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è\n` +
    (ctx.from.id === ADMIN_ID ? `/notify ‚Äî —Ä–∞—Å—Å—ã–ª–∫–∞ ¬´–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ¬ª (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)` : "")
  );
});

bot.command("schedule", (ctx) => {
  const args = ctx.message.text.split(/\s+/).slice(1); // –≤—Å—ë –ø–æ—Å–ª–µ /schedule
  if (!args.length) {
    ctx.replyWithMarkdownV2(formatWeekSchedule());
    return;
  }

  const raw = args[0].trim();
  const ruDay = Object.keys(RU_EN_DAYS).find(
    (d) => d.toLowerCase() === raw.toLowerCase()
  );

  if (!ruDay) {
    return ctx.reply(`‚ùì –ù–µ–≤–µ—Ä–Ω—ã–π –¥–µ–Ω—å: ${raw}. –ü–∏—à–∏ –ü–Ω, –í—Ç, –°—Ä, –ß—Ç, –ü—Ç`);
  }

  ctx.replyWithMarkdownV2(formatDaySchedule(ruDay));
});

bot.command("pickup", (ctx) => {
  const args = ctx.message.text.split(/\s+/).slice(1);
  if (!args.length) {
    const all = dayInfo.map((i) => formatPickupInfo(i.day)).join("\n\n");
    return ctx.replyWithMarkdownV2(all);
  }

  const raw = args[0].trim();
  const ruDay = Object.keys(RU_EN_DAYS).find(
    (d) => d.toLowerCase() === raw.toLowerCase()
  );

  if (!ruDay) {
    return ctx.reply(`‚ùì –ù–µ–≤–µ—Ä–Ω—ã–π –¥–µ–Ω—å: ${raw}. –ü–∏—à–∏ –ü–Ω, –í—Ç, –°—Ä, –ß—Ç, –ü—Ç`);
  }

  ctx.replyWithMarkdownV2(formatPickupInfo(ruDay));
});

/* --------------------------------------------------------------
   –ö–æ–º–∞–Ω–¥–∞ –∞–¥–º–∏–Ω–∞ ‚Äì —Ä–∞—Å—Å—ã–ª–∫–∞ "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ"
   -------------------------------------------------------------- */
bot.command("notify", async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) {
    return ctx.reply("üö´ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.");
  }

  const text = "üîî *–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!* –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥–æ–π /schedule.";
  const promises = [...knownUsers].map((uid) =>
    ctx.telegram.sendMessage(uid, text, { parse_mode: "MarkdownV2" })
  );

  const results = await Promise.allSettled(promises);
  const ok = results.filter((r) => r.status === "fulfilled").length;
  const fail = results.length - ok;

  ctx.reply(`‚úÖ –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${ok} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –Ω–µ —É–¥–∞–ª–æ—Å—å ${fail}.`);
});

/* --------------------------------------------------------------
   –õ—é–±–æ–π –¥—Ä—É–≥–æ–π –≤–≤–æ–¥ ‚Äì –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
   -------------------------------------------------------------- */
bot.on("text", (ctx) => {
  ctx.reply(
    "‚ùì –ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" +
    "/schedule, /schedule –ü–Ω, /pickup, /pickup –ü—Ç" +
    (ctx.from.id === ADMIN_ID ? "\n/notify (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω)" : ""),
    {
      reply_markup: {
        keyboard: [
          [{ text: "üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –Ω–µ–¥–µ–ª—é" }, { text: "üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –ü–Ω" }],
          [{ text: "üì¶ –ö—Ç–æ –∑–∞–±–∏—Ä–∞–µ—Ç?" }, { text: "ü•ã –ö–∞—Ä–∞—Ç–µ?" }]
        ],
        resize_keyboard: true,
        one_time_keyboard: false
      }
    }
  );
});

/* --------------------------------------------------------------
   Vercel‚Äë–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ (webhook entry‚Äëpoint)
   -------------------------------------------------------------- */
export default async function handler(req, res) {
  if (req.method === "POST") {
    try {
      await bot.handleUpdate(req.body, res);
    } catch (err) {
      console.error("‚ùó Bot error:", err);
      res.status(500).send("internal error");
    }
  } else {
    // –ø—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –∂–∏–≤—ë—Ç
    res.status(200).send("Telegram bot is up üëã");
  }
}
